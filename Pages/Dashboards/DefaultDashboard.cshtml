@page
@model Indotalent.Pages.Dashboards.DefaultDashboardModel
@{
    Layout = "~/Pages/Shared/AdminLTE/_Admin.cshtml";
    var statusMessage = Model.StatusMessage;
    Model.StatusMessage = string.Empty;
    ViewData["Module"] = "Dashboards";
}

<!-- Main content -->
<section class="content">
    <div class="form-card">
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-chart-line fa-3x" style="color: #E94649;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Sales</p>
                            <h6 class="mb-0 text-end">@Model.CardSalesQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-undo-alt fa-3x" style="color: #F6B53F;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Sales Rtrn.</p>
                            <h6 class="mb-0 text-end">@Model.CardSalesReturnQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-shopping-cart fa-3x" style="color: #009CFF;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Purchase</p>
                            <h6 class="mb-0 text-end">@Model.CardPurchaseQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-undo fa-3x" style="color: #C4C24A;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Purchase Rtrn.</p>
                            <h6 class="mb-0 text-end">@Model.CardPurchaseReturnQty</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-truck fa-3x" style="color: #C4C24A;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Delivery Order</p>
                            <h6 class="mb-0 text-end">@Model.CardDeliveryOrderQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-boxes fa-3x" style="color: #009CFF;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Goods Receive</p>
                            <h6 class="mb-0 text-end">@Model.CardGoodsReceiveQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-sign-out-alt fa-3x" style="color: #F6B53F;"></i>
                        <div class="ms-3">
                            <p class="mb-2">Transfer Out</p>
                            <h6 class="mb-0 text-end">@Model.CardTransferOutQty</h6>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-xl-3">
                    <div class="bg-white rounded d-flex align-items-center justify-content-between p-4">
                        <i class="fas fa-sign-in-alt fa-3x" style="color: #E94649"></i>
                        <div class="ms-3">
                            <p class="mb-2">Transfer In</p>
                            <h6 class="mb-0 text-end">@Model.CardTransferInQty</h6>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Customer Group</h6>
                            <a asp-area="" asp-page="/SalesOrderItems/SalesOrderItemList">Sales</a>
                        </div>
                        <div id="customerGroupChart" align="center"></div>
                    </div>
                </div>
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Vendor Group</h6>
                            <a asp-area="" asp-page="/PurchaseOrderItems/PurchaseOrderItemList">Purchases</a>
                        </div>
                        <div id="vendorGroupChart" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Customer Category</h6>
                            <a asp-area="" asp-page="/SalesOrderItems/SalesOrderItemList">Sales</a>
                        </div>
                        <div id="customerCategoryChart" align="center"></div>
                    </div>
                </div>
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Vendor Category</h6>
                            <a asp-area="" asp-page="/PurchaseOrderItems/PurchaseOrderItemList">Purchases</a>
                        </div>
                        <div id="vendorCategoryChart" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-12 col-xl-12">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Product Group</h6>
                            <a asp-area="" asp-page="/Products/ProductList">Products</a>
                        </div>
                        <div id="productChart" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Latest Sales</h6>
                            <a asp-area="" asp-page="/SalesOrderItems/SalesOrderItemList">Sales</a>
                        </div>
                        <div id="salesOrderGrid" align="center"></div>
                    </div>
                </div>
                <div class="col-sm-12 col-xl-6">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Latest Purchase</h6>
                            <a asp-area="" asp-page="/PurchaseOrderItems/PurchaseOrderItemList">Purchases</a>
                        </div>
                        <div id="purchaseOrderGrid" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="col-sm-12 col-xl-12">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Inventory Stock</h6>
                            <a asp-area="" asp-page="/InventoryStocks/InventoryStockList">Stocks</a>
                        </div>
                        <div id="stockChart" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4 mb-4">
                <div class="col-sm-12 col-xl-12">
                    <div class="bg-light text-center rounded p-4">
                        <div class="d-flex align-items-center justify-content-between mb-4">
                            <h6 class="mb-0">Inventory Transaction</h6>
                            <a asp-area="" asp-page="/InventoryTransactions/InventoryTransactionList">Transactions</a>
                        </div>
                        <div id="inventoryTransactionGrid" align="center"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>


@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            showStatusMessage('@statusMessage');


            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: ej.base.Browser.isDevice ? -45 : 0, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.SalesCusomerGroupChartJson),
                    title: 'Sales by Customer Group',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { enableHighlight: true },
                    palettes: ["#E94649", "#F6B53F", "#009CFF", "#C4C24A"],
                }, 
                '#customerGroupChart');



            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: ej.base.Browser.isDevice ? -45 : 0, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.PurchaseVendorGroupChartJson),
                    title: 'Purchase by Vendor Group',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { enableHighlight: true },
                    palettes: ["#E94649", "#F6B53F", "#009CFF", "#C4C24A"],
                },
                '#vendorGroupChart');


            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: ej.base.Browser.isDevice ? -45 : 0, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.SalesCusomerCategoryChartJson),
                    title: 'Sales by Customer Category',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { enableHighlight: true },
                    palettes: ["#E94649", "#F6B53F", "#009CFF", "#C4C24A"],
                },
                '#customerCategoryChart');



            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: ej.base.Browser.isDevice ? -45 : 0, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.PurchaseVendorCategoryChartJson),
                    title: 'Purchase by Vendor Category',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { enableHighlight: true },
                    palettes: ["#E94649", "#F6B53F", "#009CFF", "#C4C24A"],
                },
                '#vendorCategoryChart');


            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: ej.base.Browser.isDevice ? -45 : 0, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.SalesPurchaseProductGroupChartJson),
                    title: 'Sales & Purchases by Product Group',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { visible: true },
                    palettes: ["#E94649", "#009CFF", "#F6B53F", "#C4C24A"],
                },
                '#productChart');


            new ej.grids.Grid({
                dataSource: @Html.Raw(Model.LatestSalesOrderJson),
                allowFiltering: false,
                allowSorting: true,
                allowSelection: false,
                allowGrouping: false,
                allowTextWrap: false,
                allowResizing: false,
                allowPaging: true,
                allowExcelExport: false,
                sortSettings: { columns: [{ field: 'OrderDate', direction: 'Descending' }] },
                pageSettings: { currentPage: 1, pageSize: 10 },
                autoFit: false,
                showColumnMenu: false,
                gridLines: 'Horizontal',
                columns: [
                    {
                        field: 'RowGuid', isPrimaryKey: true, headerText: 'RowGuid', visible: false
                    },
                    { field: 'OrderDate', headerText: 'Order Date', width: 70, type: 'dateTime', format: 'yyyy-MM-dd', textAlign: 'Left' },
                    { field: 'SalesOrder', headerText: '#Number', width: 90 },
                    { field: 'Product', width: 150 },
                    { field: 'Total', width: 70, type: 'number', format: 'N2', textAlign: 'Right' },
                ],
            }, '#salesOrderGrid');


            new ej.grids.Grid({
                dataSource: @Html.Raw(Model.LatestPurchaseOrderJson),
                allowFiltering: false,
                allowSorting: true,
                allowSelection: false,
                allowGrouping: false,
                allowTextWrap: false,
                allowResizing: false,
                allowPaging: true,
                allowExcelExport: false,
                sortSettings: { columns: [{ field: 'OrderDate', direction: 'Descending' }] },
                pageSettings: { currentPage: 1, pageSize: 10 },
                autoFit: false,
                showColumnMenu: false,
                gridLines: 'Horizontal',
                columns: [
                    {
                        field: 'RowGuid', isPrimaryKey: true, headerText: 'RowGuid', visible: false
                    },
                    { field: 'OrderDate', headerText: 'Order Date', width: 70, type: 'dateTime', format: 'yyyy-MM-dd', textAlign: 'Left' },
                    { field: 'PurchaseOrder', headerText: '#Number', width: 90 },
                    { field: 'Product', width: 150 },
                    { field: 'Total', width: 70, type: 'number', format: 'N2', textAlign: 'Right' },
                ],
            }, '#purchaseOrderGrid');


            var grid = new ej.grids.Grid({
                dataSource: new ej.data.DataManager({
                    url: '/odata/InvenTrans',
                    adaptor: new ej.data.ODataV4Adaptor()
                }),
                allowFiltering: false,
                allowSorting: true,
                allowSelection: true,
                allowGrouping: false,
                allowTextWrap: true,
                allowResizing: true,
                allowPaging: true,
                allowExcelExport: false,
                filterSettings: { type: 'CheckBox' },
                sortSettings: { columns: [{ field: 'MovementDate', direction: 'Descending' }] },
                pageSettings: { currentPage: 1, pageSize: 10, pageSizes: ["10", "20", "50", "100", "200"] },
                selectionSettings: { persistSelection: true, type: 'Single' },
                autoFit: true,
                showColumnMenu: false,
                gridLines: 'Horizontal',
                columns: [
                    { type: 'checkbox', width: 100 },
                    {
                        field: 'RowGuid', isPrimaryKey: true, headerText: 'RowGuid', visible: false
                    },
                    { field: 'MovementDate', width: 100, format: 'yyyy-MM-dd', textAlign: 'Left', type: 'dateTime' },
                    { field: 'Warehouse', width: 100 },
                    { field: 'Product', width: 100 },
                    { field: 'Number', width: 100 },
                    { field: 'Movement', width: 100, type: 'number', format: 'N2', textAlign: 'Right' },
                    { field: 'TransType', width: 100, allowFiltering: false },
                    { field: 'Stock', width: 100, type: 'number', format: '+0.00;-0.00;0.00', textAlign: 'Right' },
                    { field: 'Status', width: 100, allowFiltering: false },
                    { field: 'ModuleName', width: 100 },
                    { field: 'ModuleCode', width: 100 },
                    { field: 'ModuleNumber', width: 100 },
                    { field: 'WarehouseFrom', width: 100 },
                    { field: 'WarehouseTo', width: 100 },
                ],
                beforeDataBound: () => {
                },
                dataBound: function () {
                    grid.autoFitColumns(['CreatedAtUtc', 'Warehouse', 'Product', 'Number', 'MovementDate', 'Movement', 'TransType', 'ModuleName', 'ModuleCode', 'ModuleNumber', 'WarehouseFrom', 'WarehouseTo', 'Status', 'Stock']);
                },
                excelExportComplete: () => {
                },
                rowSelected: () => {
                },
                rowDeselected: () => {
                },
                rowSelecting: () => {
                    if (grid.getSelectedRecords().length) {
                        grid.clearSelection();
                    }
                },
                toolbarClick: (args) => {
                    if (args.item.id === 'Grid_excelexport') {
                        grid.excelExport();
                    }


                }
            });
            grid.appendTo('#inventoryTransactionGrid');

            new ej.charts.Chart(
                {
                    primaryXAxis: {
                        valueType: 'Category', interval: 1, majorGridLines: { width: 0 }, majorTickLines: { width: 0 }, labelIntersectAction: 'None', labelRotation: -15, minorTickLines: { width: 0 }
                    },
                    chartArea: { border: { width: 0 } },
                    primaryYAxis: {
                        title: 'Quantity',
                        majorTickLines: { width: 0 }, lineStyle: { width: 0 },
                    },
                    series: @Html.Raw(Model.InventoryStockGroupChartJson),
                    title: 'Stock by Warehouse',
                    tooltip: { enable: true, header: "<b>${point.tooltip}</b>", shared: true },
                    legendSettings: { visible: true },
                    palettes: ["#E94649", "#F6B53F", "#009CFF", "#C4C24A"],
                },
                '#stockChart');

        });
    </script>
}