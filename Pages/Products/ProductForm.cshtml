@page "{rowGuid?}"
@using Indotalent.Models.Enums
@model Indotalent.Pages.Products.ProductFormModel
@{
    Layout = "~/Pages/Shared/AdminLTE/_Admin.cshtml";
    var statusMessage = Model.StatusMessage;
    Model.StatusMessage = string.Empty;
}

<div class="form-card">
    <form id="formMain" method="post" novalidate="">
        <input type="hidden" asp-for="@Model.ProductForm.RowGuid" />
        <div class="form-card-body">

            <p class="small-italic-left">General</p>
            <fieldset>
                <div class="row">
                    <div class="col-md-12">
                        @if (!string.IsNullOrEmpty(Model.Number))
                        {
                            <h1>@Model.Number</h1>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="@Model.ProductForm.Name" class="form-label"></label>
                            <input asp-for="@Model.ProductForm.Name" />
                        </div>
                    </div>
                    <div class="col-md-6">
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <label asp-for="@Model.ProductForm.Description" class="form-label"></label>
                            <textarea asp-for="@Model.ProductForm.Description" class="form-control" rows="6"></textarea>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="@Model.ProductForm.ProductGroupId" class="form-label"></label>
                            <select asp-for="@Model.ProductForm.ProductGroupId" asp-items="@Model.ProductGroupLookup" class="form-control">
                                <option value="">-- Select Group --</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="@Model.ProductForm.UnitMeasureId" class="form-label"></label>
                            <select asp-for="@Model.ProductForm.UnitMeasureId" asp-items="@Model.UnitMeasureLookup" class="form-control">
                                <option value="">-- Select Measure --</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="@Model.ProductForm.UnitPrice" class="form-label"></label>
                            <input asp-for="@Model.ProductForm.UnitPrice" class="form-control" type="text"/>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mt-3">
                            <label class="form-check-label" asp-for="@Model.ProductForm.Physical"></label>
                            <div class="form-check">
                                <input asp-for="@Model.ProductForm.Physical" type="checkbox" class="form-check-input" />
                            </div>
                        </div>
                    </div>
                </div>
            </fieldset>

        </div>
        <div class="form-card-footer">
            <button type="submit" id="btnSubmit" class="e-btn e-control @(Model.Action == "delete" ? "e-danger" : "")">@(Model.Action == "delete" ? "Delete" : "Submit")</button>
        </div>

    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            

            showStatusMessage('@statusMessage');

            new ej.inputs.TextBox({}, '#ProductForm_Name');
            new ej.inputs.TextBox({}, '#ProductForm_Description');
            //new ej.buttons.CheckBox({}, '#ProductForm_Physical');
            new ej.dropdowns.DropDownList({ allowFiltering: true }, '#ProductForm_ProductGroupId');
            new ej.dropdowns.DropDownList({ allowFiltering: true }, '#ProductForm_UnitMeasureId');
            new ej.inputs.NumericTextBox({ format: 'N2', min: 0.0 }, '#ProductForm_UnitPrice');
            new ej.buttons.Button({ isPrimary: true }, '#btnSubmit');

            var validationOptions = {
                rules: {
                    'ProductForm.Name': { required: true },
                    'ProductForm.ProductGroupId': { required: true },
                    'ProductForm.UnitMeasureId': { required: true },
                    'ProductForm.UnitPrice': { required: true },
                }
            }

            var formValidator = new ej.inputs.FormValidator('#formMain', validationOptions);
            var formElement = document.getElementById('formMain');
            formElement.addEventListener('submit', function (e) {
                e.preventDefault();
                if (formValidator.validate()) {
                    formElement.submit();
                }
            })

        });
    </script>
}
