@page
@model Indotalent.Pages.Scrappings.ScrappingListModel
@{
    Layout = "~/Pages/Shared/AdminLTE/_Admin.cshtml";
    var statusMessage = Model.StatusMessage;
    Model.StatusMessage = string.Empty;
    ViewData["Module"] = "Inventory";
}



<div class="row">
    <div class="col-12">
        <div id="Grid"></div>
    </div>
</div>

@section Scripts {
    <script>


        document.addEventListener('DOMContentLoaded', function () {

            showStatusMessage('@statusMessage');

            var grid = new ej.grids.Grid({
                dataSource: new ej.data.DataManager({
                    url: '/odata/Scrapping',
                    adaptor: new ej.data.ODataV4Adaptor()
                }),
                allowFiltering: true,
                allowSorting: true,
                allowSelection: true,
                allowGrouping: true,
                allowTextWrap: true,
                allowResizing: true,
                allowPaging: true,
                allowExcelExport: true,
                filterSettings: { type: 'CheckBox' },
                sortSettings: { columns: [{ field: 'CreatedAtUtc', direction: 'Descending' }] },
                pageSettings: { currentPage: 1, pageSize: 20, pageSizes: ["10", "20", "50", "100", "200", "All"] },
                selectionSettings: { persistSelection: true, type: 'Single' },
                autoFit: true,
                showColumnMenu: true,
                gridLines: 'Horizontal',
                columns: [
                    { type: 'checkbox', width: 100 },
                    {
                        field: 'RowGuid', isPrimaryKey: true, headerText: 'RowGuid', visible: false
                    },
                    { field: 'CreatedAtUtc', width: 100, format: 'yyyy-MM-dd HH:ss', textAlign: 'Left', type: 'dateTime' },
                    { field: 'Number', width: 100 },
                    { field: 'ScrappingDate', width: 100, format: 'yyyy-MM-dd', textAlign: 'Left', type: 'dateTime' },
                    { field: 'Status', width: 100, allowFiltering: false },
                    { field: 'Warehouse', width: 100 },
                ],
                toolbar: [
                    'ExcelExport', 'Search',
                    { type: 'Separator' },
                    { text: 'Add', tooltipText: 'Add', prefixIcon: 'e-add', id: 'AddCustom' },
                    { text: 'Edit', tooltipText: 'Edit', prefixIcon: 'e-edit', id: 'EditCustom' },
                    { text: 'Delete', tooltipText: 'Delete', prefixIcon: 'e-delete', id: 'DeleteCustom' },
                    { type: 'Separator' },
                    { text: 'Download Pdf', tooltipText: 'Download Pdf', prefixIcon: 'e-export-pdf', id: 'PdfCustom' },
                ],
                beforeDataBound: () => {
                },
                dataBound: function () {
                    grid.toolbarModule.enableItems(['EditCustom', 'DeleteCustom', 'PdfCustom'], false);
                    grid.autoFitColumns(['CreatedAtUtc', 'Number', 'ScrappingDate', 'Status', 'Warehouse']);
                },
                excelExportComplete: () => {
                },
                rowSelected: () => {
                    if (grid.getSelectedRecords().length == 1) {
                        grid.toolbarModule.enableItems(['EditCustom', 'DeleteCustom', 'PdfCustom'], true);
                    } else {
                        grid.toolbarModule.enableItems(['EditCustom', 'DeleteCustom', 'PdfCustom'], false);
                    }
                },
                rowDeselected: () => {
                    if (grid.getSelectedRecords().length == 1) {
                        grid.toolbarModule.enableItems(['EditCustom', 'DeleteCustom', 'PdfCustom'], true);
                    } else {
                        grid.toolbarModule.enableItems(['EditCustom', 'DeleteCustom', 'PdfCustom'], false);
                    }
                },
                rowSelecting: () => {
                    if (grid.getSelectedRecords().length) {
                        grid.clearSelection();
                    }
                },
                toolbarClick: (args) => {
                    if (args.item.id === 'Grid_excelexport') {
                        grid.excelExport();
                    }

                    if (args.item.id === 'AddCustom') {
                        var formUrl = '/Scrappings/ScrappingForm' + '?action=create';
                        window.location.href = formUrl;
                    }

                    if (args.item.id === 'EditCustom') {
                        if (grid.getSelectedRecords().length) {
                            var selectedRowGuid = grid.getSelectedRecords()[0].RowGuid;
                            var formUrl = '/Scrappings/ScrappingForm?rowGuid=' + selectedRowGuid + '&action=edit';
                            window.location.href = formUrl;
                        }
                    }

                    if (args.item.id === 'DeleteCustom') {
                        if (grid.getSelectedRecords().length) {

                            dialogObj = ej.popups.DialogUtility.confirm({
                                title: ' Delete Items',
                                content: "Are you sure you want to permanently delete these items?",
                                okButton: {
                                    click: () => {
                                        dialogObj.hide();
                                        var selectedRowGuid = grid.getSelectedRecords()[0].RowGuid;
                                        var formUrl = '/Scrappings/ScrappingForm?rowGuid=' + selectedRowGuid + '&action=delete';
                                        window.location.href = formUrl;
                                    }
                                },
                                cancelButton: { click: () => { dialogObj.hide(); } },
                                position: { X: 'center', Y: 'center' },
                                closeOnEscape: true
                            });

                        }
                    }

                    if (args.item.id === 'PdfCustom') {
                        if (grid.getSelectedRecords().length) {
                            var selectedId = grid.getSelectedRecords()[0].Id;
                            var formUrl = '/Scrappings/ScrappingDownload?id=' + selectedId;
                            window.location.href = formUrl;
                        }
                    }

                }
            });


            grid.appendTo('#Grid');

        });
    </script>
}